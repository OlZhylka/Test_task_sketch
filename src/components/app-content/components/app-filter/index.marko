class {
    onCreate(input) {
        this.state = {
            years: this.getParams(input, "year"),
            axle: this.getParams(input, "axle_configuration"),
            stock: input.stock,
            yearChecked: [],
            axleRadioChecked: "",
            minValuePower: null,
            maxValuePower: null,
            flagError: false,
            keyword: "",
        };
    }

    getParams(input, param) {
        let params = input.stock.map((stock) => {
            return stock[param];
        });
        let uniqueParams = params.filter((item, pos) => {
            return params.indexOf(item) == pos;
        });
        return uniqueParams.sort((a, b) => a - b);
    }

    searchClick() {
        let stockNew = this.state.stock.filter((item) => {
            return (
                !this.state.yearChecked.length ||
                this.state.yearChecked.find((i) => i == item.year)
            );
        });

        stockNew = stockNew.filter((item) => {
            return (
                !this.state.axleRadioChecked ||
                this.state.axleRadioChecked == item.axle_configuration
            );
        });

        stockNew = stockNew.filter((item) => {
            return (
                !this.state.minValuePower ||
                this.state.minValuePower <= item.power
            );
        });

        stockNew = stockNew.filter((item) => {
            return (
                !this.state.maxValuePower ||
                this.state.maxValuePower >= item.power
            );
        });

        stockNew = stockNew.filter((item) => {
            return (
                !this.state.keyword ||
                item.type.includes(this.state.keyword) ||
                item.title.includes(this.state.keyword)
            );
        });

        this.emit("emSetStock", {
            stock: stockNew,
        });
    }

    setCheckbox(data) {
        if (data.checked) {
            this.state.yearChecked.push(data.year);
        } else {
            this.state.yearChecked = this.state.yearChecked.filter(
                (value) => value !== data.year
            );
        }
    }

    setRadio(data) {
        this.state.axleRadioChecked = data.axle;
    }

    setMinValuePower(event) {
        this.state.minValuePower = event.target.value;
        if (!isNaN(event.target.value)) {
            this.state.flagError = false;
        } else {
            this.state.flagError = true;
        }
    }

    setMaxValuePower(event) {
        this.state.maxValuePower = event.target.value;
        if (!isNaN(event.target.value)) {
            this.state.flagError = false;
        } else {
            this.state.flagError = true;
        }
    }

    setKeyword(event) {
        this.state.keyword = event.target.value;
    }
}

<section.filterApp>
    <div>
        <h4.result>26 Results Found</h4>
        <details>
            <summary>Years</summary>
            <for|year, index| of=state.years>
                <app-checkbox
                    key=index
                    checkValue=year
                    onEmSetCheckbox("setCheckbox")
                />
            </for>
        </details>
        <details>
            <summary>Axle Configuration</summary>
            <for|axle, index| of=state.axle>
                <app-radiobutton
                    key=index
                    checkValue=axle
                    name="axle"
                    index=index
                    onEmSetRadio("setRadio")
                />
            </for>
        </details>
        <details>
            <summary>Power</summary>
            <div.rowFilter>
                <input.inputText#min
                    type="text"
                    placeholder="min"
                    value=state.minValuePower
                    onInput("setMinValuePower")
                >
                <input.inputText#max
                    type="text"
                    placeholder="max"
                    value=state.maxValuePower
                    onInput("setMaxValuePower")
                >
            </div>
            <if(state.flagError)>
                <div.errorMessage>Enter a numeric value!</div>
            </if>
        </details>
        <details>
            <summary>Keywords</summary>
            <div.rowFilter>
                <input.inputKeywords
                    type="text"
                    placeholder="Keyword"
                    value=state.keyword
                    onChange("setKeyword")
                >
            </div>
        </details>
    </div>
    <button.buttonSearch on-click("searchClick")>Search</button>
</section>
